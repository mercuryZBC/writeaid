// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.3
// source: notification.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_PUSH_OK    Status = 0
	Status_PUSH_ERROR Status = 1
	Status_PULL_OK    Status = 2
	Status_PULL_ERROR Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "PUSH_OK",
		1: "PUSH_ERROR",
		2: "PULL_OK",
		3: "PULL_ERROR",
	}
	Status_value = map[string]int32{
		"PUSH_OK":    0,
		"PUSH_ERROR": 1,
		"PULL_OK":    2,
		"PULL_ERROR": 3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_notification_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{0}
}

type NotifyType int32

const (
	NotifyType_COMMENT        NotifyType = 0
	NotifyType_DOCUMENT       NotifyType = 1
	NotifyType_KNOWLEDGE_BASE NotifyType = 2
	NotifyType_SYSTEM         NotifyType = 3
)

// Enum value maps for NotifyType.
var (
	NotifyType_name = map[int32]string{
		0: "COMMENT",
		1: "DOCUMENT",
		2: "KNOWLEDGE_BASE",
		3: "SYSTEM",
	}
	NotifyType_value = map[string]int32{
		"COMMENT":        0,
		"DOCUMENT":       1,
		"KNOWLEDGE_BASE": 2,
		"SYSTEM":         3,
	}
)

func (x NotifyType) Enum() *NotifyType {
	p := new(NotifyType)
	*p = x
	return p
}

func (x NotifyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotifyType) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_proto_enumTypes[1].Descriptor()
}

func (NotifyType) Type() protoreflect.EnumType {
	return &file_notification_proto_enumTypes[1]
}

func (x NotifyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotifyType.Descriptor instead.
func (NotifyType) EnumDescriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{1}
}

type KnowLedgeBaseOperate int32

const (
	KnowLedgeBaseOperate_KB_CREATE KnowLedgeBaseOperate = 0
	KnowLedgeBaseOperate_KB_VIEW   KnowLedgeBaseOperate = 1
	KnowLedgeBaseOperate_KB_EDIT   KnowLedgeBaseOperate = 2
	KnowLedgeBaseOperate_KB_DELETE KnowLedgeBaseOperate = 3
)

// Enum value maps for KnowLedgeBaseOperate.
var (
	KnowLedgeBaseOperate_name = map[int32]string{
		0: "KB_CREATE",
		1: "KB_VIEW",
		2: "KB_EDIT",
		3: "KB_DELETE",
	}
	KnowLedgeBaseOperate_value = map[string]int32{
		"KB_CREATE": 0,
		"KB_VIEW":   1,
		"KB_EDIT":   2,
		"KB_DELETE": 3,
	}
)

func (x KnowLedgeBaseOperate) Enum() *KnowLedgeBaseOperate {
	p := new(KnowLedgeBaseOperate)
	*p = x
	return p
}

func (x KnowLedgeBaseOperate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KnowLedgeBaseOperate) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_proto_enumTypes[2].Descriptor()
}

func (KnowLedgeBaseOperate) Type() protoreflect.EnumType {
	return &file_notification_proto_enumTypes[2]
}

func (x KnowLedgeBaseOperate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KnowLedgeBaseOperate.Descriptor instead.
func (KnowLedgeBaseOperate) EnumDescriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{2}
}

type DocumentOperate int32

const (
	DocumentOperate_DOC_CREATE DocumentOperate = 0
	DocumentOperate_DOC_VIEW   DocumentOperate = 1
	DocumentOperate_DOC_EDIT   DocumentOperate = 2
	DocumentOperate_DOC_DELETE DocumentOperate = 3
)

// Enum value maps for DocumentOperate.
var (
	DocumentOperate_name = map[int32]string{
		0: "DOC_CREATE",
		1: "DOC_VIEW",
		2: "DOC_EDIT",
		3: "DOC_DELETE",
	}
	DocumentOperate_value = map[string]int32{
		"DOC_CREATE": 0,
		"DOC_VIEW":   1,
		"DOC_EDIT":   2,
		"DOC_DELETE": 3,
	}
)

func (x DocumentOperate) Enum() *DocumentOperate {
	p := new(DocumentOperate)
	*p = x
	return p
}

func (x DocumentOperate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocumentOperate) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_proto_enumTypes[3].Descriptor()
}

func (DocumentOperate) Type() protoreflect.EnumType {
	return &file_notification_proto_enumTypes[3]
}

func (x DocumentOperate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocumentOperate.Descriptor instead.
func (DocumentOperate) EnumDescriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{3}
}

type PullContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           NotifyType `protobuf:"varint,1,opt,name=type,proto3,enum=notificationService.NotifyType" json:"type,omitempty"`
	MessageContent string     `protobuf:"bytes,2,opt,name=messageContent,proto3" json:"messageContent,omitempty"`
	Time           int64      `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	Link           string     `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
	LinkDescribe   string     `protobuf:"bytes,5,opt,name=linkDescribe,proto3" json:"linkDescribe,omitempty"`
	IsCheck        bool       `protobuf:"varint,6,opt,name=isCheck,proto3" json:"isCheck,omitempty"`
	AvatarLink     string     `protobuf:"bytes,7,opt,name=avatarLink,proto3" json:"avatarLink,omitempty"`
}

func (x *PullContent) Reset() {
	*x = PullContent{}
	mi := &file_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullContent) ProtoMessage() {}

func (x *PullContent) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullContent.ProtoReflect.Descriptor instead.
func (*PullContent) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{0}
}

func (x *PullContent) GetType() NotifyType {
	if x != nil {
		return x.Type
	}
	return NotifyType_COMMENT
}

func (x *PullContent) GetMessageContent() string {
	if x != nil {
		return x.MessageContent
	}
	return ""
}

func (x *PullContent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *PullContent) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *PullContent) GetLinkDescribe() string {
	if x != nil {
		return x.LinkDescribe
	}
	return ""
}

func (x *PullContent) GetIsCheck() bool {
	if x != nil {
		return x.IsCheck
	}
	return false
}

func (x *PullContent) GetAvatarLink() string {
	if x != nil {
		return x.AvatarLink
	}
	return ""
}

type PushKnowledgeBaseOperateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            int64                `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	KnowledgeBaseId   int64                `protobuf:"varint,2,opt,name=knowledgeBaseId,proto3" json:"knowledgeBaseId,omitempty"`
	KnowledgeBaseName string               `protobuf:"bytes,3,opt,name=knowledgeBaseName,proto3" json:"knowledgeBaseName,omitempty"`
	Operate           KnowLedgeBaseOperate `protobuf:"varint,4,opt,name=operate,proto3,enum=notificationService.KnowLedgeBaseOperate" json:"operate,omitempty"`
	Time              int64                `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *PushKnowledgeBaseOperateReq) Reset() {
	*x = PushKnowledgeBaseOperateReq{}
	mi := &file_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushKnowledgeBaseOperateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushKnowledgeBaseOperateReq) ProtoMessage() {}

func (x *PushKnowledgeBaseOperateReq) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushKnowledgeBaseOperateReq.ProtoReflect.Descriptor instead.
func (*PushKnowledgeBaseOperateReq) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{1}
}

func (x *PushKnowledgeBaseOperateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PushKnowledgeBaseOperateReq) GetKnowledgeBaseId() int64 {
	if x != nil {
		return x.KnowledgeBaseId
	}
	return 0
}

func (x *PushKnowledgeBaseOperateReq) GetKnowledgeBaseName() string {
	if x != nil {
		return x.KnowledgeBaseName
	}
	return ""
}

func (x *PushKnowledgeBaseOperateReq) GetOperate() KnowLedgeBaseOperate {
	if x != nil {
		return x.Operate
	}
	return KnowLedgeBaseOperate_KB_CREATE
}

func (x *PushKnowledgeBaseOperateReq) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type PushKnowledgeBaseOperateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=notificationService.Status" json:"status,omitempty"`
}

func (x *PushKnowledgeBaseOperateResp) Reset() {
	*x = PushKnowledgeBaseOperateResp{}
	mi := &file_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushKnowledgeBaseOperateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushKnowledgeBaseOperateResp) ProtoMessage() {}

func (x *PushKnowledgeBaseOperateResp) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushKnowledgeBaseOperateResp.ProtoReflect.Descriptor instead.
func (*PushKnowledgeBaseOperateResp) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{2}
}

func (x *PushKnowledgeBaseOperateResp) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_PUSH_OK
}

type PushDocumentOperateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int64           `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	DocumentId   int64           `protobuf:"varint,2,opt,name=documentId,proto3" json:"documentId,omitempty"`
	DocumentName int64           `protobuf:"varint,3,opt,name=documentName,proto3" json:"documentName,omitempty"`
	Operate      DocumentOperate `protobuf:"varint,4,opt,name=operate,proto3,enum=notificationService.DocumentOperate" json:"operate,omitempty"`
	Time         int64           `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *PushDocumentOperateReq) Reset() {
	*x = PushDocumentOperateReq{}
	mi := &file_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushDocumentOperateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushDocumentOperateReq) ProtoMessage() {}

func (x *PushDocumentOperateReq) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushDocumentOperateReq.ProtoReflect.Descriptor instead.
func (*PushDocumentOperateReq) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{3}
}

func (x *PushDocumentOperateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PushDocumentOperateReq) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *PushDocumentOperateReq) GetDocumentName() int64 {
	if x != nil {
		return x.DocumentName
	}
	return 0
}

func (x *PushDocumentOperateReq) GetOperate() DocumentOperate {
	if x != nil {
		return x.Operate
	}
	return DocumentOperate_DOC_CREATE
}

func (x *PushDocumentOperateReq) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type PushDocumentOperateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=notificationService.Status" json:"status,omitempty"`
}

func (x *PushDocumentOperateResp) Reset() {
	*x = PushDocumentOperateResp{}
	mi := &file_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushDocumentOperateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushDocumentOperateResp) ProtoMessage() {}

func (x *PushDocumentOperateResp) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushDocumentOperateResp.ProtoReflect.Descriptor instead.
func (*PushDocumentOperateResp) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{4}
}

func (x *PushDocumentOperateResp) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_PUSH_OK
}

type PushCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	CommentUserId  int64  `protobuf:"varint,2,opt,name=commentUserId,proto3" json:"commentUserId,omitempty"`
	DocumentId     int64  `protobuf:"varint,3,opt,name=documentId,proto3" json:"documentId,omitempty"`
	CommentTime    int64  `protobuf:"varint,4,opt,name=commentTime,proto3" json:"commentTime,omitempty"`
	CommentContent string `protobuf:"bytes,5,opt,name=commentContent,proto3" json:"commentContent,omitempty"`
}

func (x *PushCommentReq) Reset() {
	*x = PushCommentReq{}
	mi := &file_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushCommentReq) ProtoMessage() {}

func (x *PushCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushCommentReq.ProtoReflect.Descriptor instead.
func (*PushCommentReq) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{5}
}

func (x *PushCommentReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PushCommentReq) GetCommentUserId() int64 {
	if x != nil {
		return x.CommentUserId
	}
	return 0
}

func (x *PushCommentReq) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *PushCommentReq) GetCommentTime() int64 {
	if x != nil {
		return x.CommentTime
	}
	return 0
}

func (x *PushCommentReq) GetCommentContent() string {
	if x != nil {
		return x.CommentContent
	}
	return ""
}

type PushCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=notificationService.Status" json:"status,omitempty"`
}

func (x *PushCommentResp) Reset() {
	*x = PushCommentResp{}
	mi := &file_notification_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushCommentResp) ProtoMessage() {}

func (x *PushCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushCommentResp.ProtoReflect.Descriptor instead.
func (*PushCommentResp) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{6}
}

func (x *PushCommentResp) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_PUSH_OK
}

type PullReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *PullReq) Reset() {
	*x = PullReq{}
	mi := &file_notification_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullReq) ProtoMessage() {}

func (x *PullReq) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullReq.ProtoReflect.Descriptor instead.
func (*PullReq) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{7}
}

func (x *PullReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type PullResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      Status         `protobuf:"varint,1,opt,name=status,proto3,enum=notificationService.Status" json:"status,omitempty"`
	PullContent []*PullContent `protobuf:"bytes,2,rep,name=pullContent,proto3" json:"pullContent,omitempty"`
}

func (x *PullResp) Reset() {
	*x = PullResp{}
	mi := &file_notification_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullResp) ProtoMessage() {}

func (x *PullResp) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullResp.ProtoReflect.Descriptor instead.
func (*PullResp) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{8}
}

func (x *PullResp) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_PUSH_OK
}

func (x *PullResp) GetPullContent() []*PullContent {
	if x != nil {
		return x.PullContent
	}
	return nil
}

type PullNotificationCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *PullNotificationCountReq) Reset() {
	*x = PullNotificationCountReq{}
	mi := &file_notification_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullNotificationCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullNotificationCountReq) ProtoMessage() {}

func (x *PullNotificationCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullNotificationCountReq.ProtoReflect.Descriptor instead.
func (*PullNotificationCountReq) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{9}
}

func (x *PullNotificationCountReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type PullNotificationCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=notificationService.Status" json:"status,omitempty"`
	Count  int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PullNotificationCountResp) Reset() {
	*x = PullNotificationCountResp{}
	mi := &file_notification_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullNotificationCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullNotificationCountResp) ProtoMessage() {}

func (x *PullNotificationCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullNotificationCountResp.ProtoReflect.Descriptor instead.
func (*PullNotificationCountResp) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{10}
}

func (x *PullNotificationCountResp) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_PUSH_OK
}

func (x *PullNotificationCountResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_notification_proto protoreflect.FileDescriptor

var file_notification_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x0b, 0x50, 0x75,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x22,
	0x0a, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0xe6, 0x01, 0x0a,
	0x1b, 0x50, 0x75, 0x73, 0x68, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x07,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x1c, 0x50, 0x75, 0x73, 0x68, 0x4b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x16, 0x50,
	0x75, 0x73, 0x68, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3e, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x17, 0x50, 0x75, 0x73, 0x68, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x46, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x21, 0x0a, 0x07, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x08,
	0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x42, 0x0a,
	0x0b, 0x70, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x70, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x32, 0x0a, 0x18, 0x50, 0x75, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x19, 0x50, 0x75, 0x6c, 0x6c, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x42, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x55, 0x53, 0x48, 0x5f,
	0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x4f, 0x4b, 0x10,
	0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x03, 0x2a, 0x47, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x03, 0x2a, 0x4e, 0x0a, 0x14, 0x4b, 0x6e,
	0x6f, 0x77, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x42, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x42, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x4b, 0x42, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4b,
	0x42, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x2a, 0x4d, 0x0a, 0x0f, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a,
	0x0a, 0x44, 0x4f, 0x43, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x4f, 0x43, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44,
	0x4f, 0x43, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x4f, 0x43,
	0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x32, 0x9f, 0x04, 0x0a, 0x13, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x7f, 0x0a, 0x18, 0x50, 0x75, 0x73, 0x68, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x30, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x31, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x70, 0x0a, 0x13, 0x50, 0x75, 0x73, 0x68, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43,
	0x0a, 0x04, 0x50, 0x75, 0x6c, 0x6c, 0x12, 0x1c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x76, 0x0a, 0x15, 0x50, 0x75, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x04, 0x5a, 0x02, 0x2e,
	0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notification_proto_rawDescOnce sync.Once
	file_notification_proto_rawDescData = file_notification_proto_rawDesc
)

func file_notification_proto_rawDescGZIP() []byte {
	file_notification_proto_rawDescOnce.Do(func() {
		file_notification_proto_rawDescData = protoimpl.X.CompressGZIP(file_notification_proto_rawDescData)
	})
	return file_notification_proto_rawDescData
}

var file_notification_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_notification_proto_goTypes = []any{
	(Status)(0),                          // 0: notificationService.Status
	(NotifyType)(0),                      // 1: notificationService.NotifyType
	(KnowLedgeBaseOperate)(0),            // 2: notificationService.KnowLedgeBaseOperate
	(DocumentOperate)(0),                 // 3: notificationService.DocumentOperate
	(*PullContent)(nil),                  // 4: notificationService.PullContent
	(*PushKnowledgeBaseOperateReq)(nil),  // 5: notificationService.PushKnowledgeBaseOperateReq
	(*PushKnowledgeBaseOperateResp)(nil), // 6: notificationService.PushKnowledgeBaseOperateResp
	(*PushDocumentOperateReq)(nil),       // 7: notificationService.PushDocumentOperateReq
	(*PushDocumentOperateResp)(nil),      // 8: notificationService.PushDocumentOperateResp
	(*PushCommentReq)(nil),               // 9: notificationService.PushCommentReq
	(*PushCommentResp)(nil),              // 10: notificationService.PushCommentResp
	(*PullReq)(nil),                      // 11: notificationService.PullReq
	(*PullResp)(nil),                     // 12: notificationService.PullResp
	(*PullNotificationCountReq)(nil),     // 13: notificationService.PullNotificationCountReq
	(*PullNotificationCountResp)(nil),    // 14: notificationService.PullNotificationCountResp
}
var file_notification_proto_depIdxs = []int32{
	1,  // 0: notificationService.PullContent.type:type_name -> notificationService.NotifyType
	2,  // 1: notificationService.PushKnowledgeBaseOperateReq.operate:type_name -> notificationService.KnowLedgeBaseOperate
	0,  // 2: notificationService.PushKnowledgeBaseOperateResp.status:type_name -> notificationService.Status
	3,  // 3: notificationService.PushDocumentOperateReq.operate:type_name -> notificationService.DocumentOperate
	0,  // 4: notificationService.PushDocumentOperateResp.status:type_name -> notificationService.Status
	0,  // 5: notificationService.PushCommentResp.status:type_name -> notificationService.Status
	0,  // 6: notificationService.PullResp.status:type_name -> notificationService.Status
	4,  // 7: notificationService.PullResp.pullContent:type_name -> notificationService.PullContent
	0,  // 8: notificationService.PullNotificationCountResp.status:type_name -> notificationService.Status
	5,  // 9: notificationService.NotificationService.PushKnowledgeBaseOperate:input_type -> notificationService.PushKnowledgeBaseOperateReq
	7,  // 10: notificationService.NotificationService.PushDocumentOperate:input_type -> notificationService.PushDocumentOperateReq
	9,  // 11: notificationService.NotificationService.PushComment:input_type -> notificationService.PushCommentReq
	11, // 12: notificationService.NotificationService.Pull:input_type -> notificationService.PullReq
	13, // 13: notificationService.NotificationService.PullNotificationCount:input_type -> notificationService.PullNotificationCountReq
	6,  // 14: notificationService.NotificationService.PushKnowledgeBaseOperate:output_type -> notificationService.PushKnowledgeBaseOperateResp
	8,  // 15: notificationService.NotificationService.PushDocumentOperate:output_type -> notificationService.PushDocumentOperateResp
	10, // 16: notificationService.NotificationService.PushComment:output_type -> notificationService.PushCommentResp
	12, // 17: notificationService.NotificationService.Pull:output_type -> notificationService.PullResp
	14, // 18: notificationService.NotificationService.PullNotificationCount:output_type -> notificationService.PullNotificationCountResp
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_notification_proto_init() }
func file_notification_proto_init() {
	if File_notification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notification_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notification_proto_goTypes,
		DependencyIndexes: file_notification_proto_depIdxs,
		EnumInfos:         file_notification_proto_enumTypes,
		MessageInfos:      file_notification_proto_msgTypes,
	}.Build()
	File_notification_proto = out.File
	file_notification_proto_rawDesc = nil
	file_notification_proto_goTypes = nil
	file_notification_proto_depIdxs = nil
}
